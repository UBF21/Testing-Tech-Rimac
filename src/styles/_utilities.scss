@import 'variables';

@each $spacer, $value in $spacers {
  .p-#{$spacer} {
    padding: $value !important;
  }

  .pt-#{$spacer} {
    padding-top: $value !important;
  }

  .pr-#{$spacer} {
    padding-right: $value !important;
  }

  .pb-#{$spacer} {
    padding-bottom: $value !important;
  }

  .pl-#{$spacer} {
    padding-left: $value !important;
  }

  .px-#{$spacer} {
    padding-left: $value !important;
    padding-right: $value !important;
  }

  .py-#{$spacer} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }

  .m-#{$spacer} {
    margin: $value !important;
  }

  .mt-#{$spacer} {
    margin-top: $value !important;
  }

  .mr-#{$spacer} {
    margin-right: $value !important;
  }

  .mb-#{$spacer} {
    margin-bottom: $value !important;
  }

  .ml-#{$spacer} {
    margin-left: $value !important;
  }

  .mx-#{$spacer} {
    margin-left: $value !important;
    margin-right: $value !important;
  }

  .my-#{$spacer} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }
}

.m-auto {
  margin: auto !important;
}

.mt-auto {
  margin-top: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

// Clases responsivas (con breakpoints)
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    @each $spacer, $value in $spacers {
      .p-#{$breakpoint}-#{$spacer} {
        padding: $value !important;
      }

      .pt-#{$breakpoint}-#{$spacer} {
        padding-top: $value !important;
      }

      .pr-#{$breakpoint}-#{$spacer} {
        padding-right: $value !important;
      }

      .pb-#{$breakpoint}-#{$spacer} {
        padding-bottom: $value !important;
      }

      .pl-#{$breakpoint}-#{$spacer} {
        padding-left: $value !important;
      }

      .px-#{$breakpoint}-#{$spacer} {
        padding-left: $value !important;
        padding-right: $value !important;
      }

      .py-#{$breakpoint}-#{$spacer} {
        padding-top: $value !important;
        padding-bottom: $value !important;
      }

      .m-#{$breakpoint}-#{$spacer} {
        margin: $value !important;
      }

      .mt-#{$breakpoint}-#{$spacer} {
        margin-top: $value !important;
      }

      .mr-#{$breakpoint}-#{$spacer} {
        margin-right: $value !important;
      }

      .mb-#{$breakpoint}-#{$spacer} {
        margin-bottom: $value !important;
      }

      .ml-#{$breakpoint}-#{$spacer} {
        margin-left: $value !important;
      }

      .mx-#{$breakpoint}-#{$spacer} {
        margin-left: $value !important;
        margin-right: $value !important;
      }

      .my-#{$breakpoint}-#{$spacer} {
        margin-top: $value !important;
        margin-bottom: $value !important;
      }

      // MÃ¡rgenes "auto" responsivos
      .m-#{$breakpoint}-auto {
        margin: auto !important;
      }

      .mt-#{$breakpoint}-auto {
        margin-top: auto !important;
      }

      .mr-#{$breakpoint}-auto {
        margin-right: auto !important;
      }

      .mb-#{$breakpoint}-auto {
        margin-bottom: auto !important;
      }

      .ml-#{$breakpoint}-auto {
        margin-left: auto !important;
      }

      .mx-#{$breakpoint}-auto {
        margin-left: auto !important;
        margin-right: auto !important;
      }

      .my-#{$breakpoint}-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
    }
  }
}


// Utilidades para min-width y max-width en porcentajes
.min-w-100 {
  min-width: 100% !important;
}

.max-w-100 {
  max-width: 100% !important;
}

.w-100-vw {
  width: 100vw !important;
}

.h-100-vh {
  height: 100vh !important;
}

.h-90-vh {
  height: 90vh !important;
}

.h-75-vh {
  height: 75vh !important;
}

.h-50-vh {
  height: 50vh !important;
}

.w-100 {
  width: 100% !important;
}

.w-75 {
  width: 75% !important;
}

.w-60 {
  width: 60% !important; // Corregido de 75% a 60% para que sea consistente
}

.w-50 {
  width: 50% !important;
}

.w-25 {
  width: 50% !important;
}


.h-100 {
  height: 100% !important;
}

// Utilidades para min-height y max-height en porcentajes
.min-h-100 {
  min-height: 100% !important;
}

.min-h-50 {
  min-height: 50% !important;
}

.min-h-75 {
  min-height: 75% !important;
}

.max-h-100 {
  max-height: 100% !important;
}

// Variantes responsivas para width
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .w-#{$breakpoint}-100 {
      width: 100% !important;
    }
    .w-#{$breakpoint}-75 {
      width: 75% !important;
    }
    .w-#{$breakpoint}-60 {
      width: 60% !important;
    }
    .w-#{$breakpoint}-50 {
      width: 50% !important;
    }
  }
}

// Utilidades para viewport height (vh)
@each $size in $vh-sizes {
  .h-vh-#{$size} {
    height: #{$size}vh !important;
  }

  .min-h-vh-#{$size} {
    min-height: #{$size}vh !important;
  }

  .max-h-vh-#{$size} {
    max-height: #{$size}vh !important;
  }
}

.min-w-100 {
  min-width: 100% !important;
}

.max-w-100 {
  max-width: 100% !important;
}

.min-w-25 {
  min-width: 25% !important;
}

.max-w-25 {
  max-width: 25% !important;
}

.min-w-50 {
  min-width: 50% !important;
}

.max-w-50 {
  max-width: 50% !important;
}

.min-w-75 {
  min-width: 75% !important;
}

.max-w-75 {
  max-width: 75% !important;
}

.min-w-100 {
  min-width: 100% !important;
}

.max-w-100 {
  max-width: 100% !important;
}

// Display utilities
.d-none {
  display: none !important;
}

.d-block {
  display: block !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-flex {
  display: flex !important;
}

.flex-row {
  flex-direction: row !important;
}

.flex-column {
  flex-direction: column !important;
}

.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-between {
  justify-content: space-between !important
}

.justify-content-around {
  justify-content: space-around !important
}

.align-items-start {
  align-items: flex-start !important;
}

.align-items-end {
  align-items: flex-end !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-baseline {
  align-items: baseline !important;
}

.align-items-stretch {
  align-items: stretch !important;
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .d-#{$breakpoint}-flex {
      display: flex !important;
    }

    .d-#{$breakpoint}-none {
      display: none !important;
    }

    .d-#{$breakpoint}-block {
      display: block !important;
    }

    .d-#{$breakpoint}-inline {
      display: inline !important;
    }

    .d-#{$breakpoint}-inline-block {
      display: inline-block !important;
    }

    .flex-#{$breakpoint}-row {
      flex-direction: row !important;
    }

    .flex-#{$breakpoint}-column {
      flex-direction: column !important;
    }

    .justify-content-#{$breakpoint}-start {
      justify-content: flex-start !important;
    }

    .justify-content-#{$breakpoint}-end {
      justify-content: flex-end !important;
    }

    .justify-content-#{$breakpoint}-center {
      justify-content: center !important;
    }

    .justify-content-#{$breakpoint}-between {
      justify-content: space-between !important;
    }

    .align-items-#{$breakpoint}-start {
      align-items: flex-start !important;
    }

    .align-items-#{$breakpoint}-end {
      align-items: flex-end !important;
    }

    .align-items-#{$breakpoint}-center {
      align-items: center !important;
    }

    .align-items-#{$breakpoint}-baseline {
      align-items: baseline !important;
    }

    .align-items-#{$breakpoint}-stretch {
      align-items: stretch !important;
    }
  }
}

// Order utilities
@each $value in $order-values {
  .order-#{$value} {
    order: $value !important;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    @each $value in $order-values {
      .order-#{$breakpoint}-#{$value} {
        order: $value !important;
      }
    }
  }
}

.img-fluid {
  max-width: 100% !important;
  height: auto !important;
}

.img-center {
  display: block !important;
  margin-left: auto !important;
  margin-right: auto !important;
}

.img-left {
  display: block !important;
  margin-right: auto !important;
}

.img-right {
  display: block !important;
  margin-left: auto !important;
}

.img-rounded {
  border-radius: 0.25rem !important;
}

.img-border {
  border: 1px solid #dee2e6 !important;
}

//background utilities

@each $color-name, $color-value in $colors {
  .bg-#{$color-name} {
    background-color: $color-value !important;
  }
}

@each $color-name, $color-value in $colors {
  .text-#{$color-name} {
    color: $color-value !important;
  }
}

.btn {
  display: inline-block;
  font-family: $font-family;
  font-weight: $font-weight-medium;
  text-align: center;
  border: none;
  border-radius: $border-radius-base;
  padding: 0.5rem 1rem;
  font-size: $font-size-base;
  line-height: $line-height-base;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

@each $color-name, $color-value in $colors {
  .btn-#{$color-name} {
    background-color: $color-value;
    color: if($color-value ==#f8f9fa or $color-value ==#ffc107, #03050F, #ffffff);

    &:hover {
      background-color: darken($color-value, 10%);
    }
  }
}

// Button size variants (fixed, independent of device)
.btn-xs {
  padding: 0.2rem 0.4rem;
  font-size: $font-size-xs;
  line-height: $line-height-xs;
}

.btn-sm {
  padding: 0.3rem 0.6rem;
  font-size: $font-size-sm;
  line-height: $line-height-sm;
}

.btn-md {
  padding: 0.5rem 1rem;
  font-size: $font-size-md;
  line-height: $line-height-md;
}

.btn-lg {
  padding: 0.75rem 1.5rem;
  font-size: $font-size-lg;
  line-height: $line-height-lg;
}

.btn-xl {
  padding: 1rem 2rem;
  font-size: $font-size-xl;
  line-height: $line-height-xl;
}

.btn-xxl {
  padding: 1.25rem 2.5rem;
  font-size: $font-size-xxl;
  line-height: $line-height-xxl;
}

// Button display utilities
.btn-inline {
  display: inline !important;
}

.btn-block {
  display: block !important;
  width: 100%;
  max-width: 100%; // Evita desbordamiento
}

.btn-inline-block {
  display: inline-block !important;
}

.btn-flex {
  display: flex !important;
}

// Responsive button display variants
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .btn-#{$breakpoint}-inline {
      display: inline !important;
    }

    .btn-#{$breakpoint}-block {
      display: block !important;
      width: 100%;
      max-width: 100%;
    }

    .btn-#{$breakpoint}-inline-block {
      display: inline-block !important;
    }

    .btn-#{$breakpoint}-flex {
      display: flex !important;
    }
  }
}

//border-radius variants (fixed, independent of device)
.rounded-xs {
  border-radius: $border-radius-xs !important; // Casi cuadrado
}

.rounded-sm {
  border-radius: $border-radius-sm !important; // Poco redondeado
}

.rounded-md {
  border-radius: $border-radius-md !important; // Redondeo moderado
}

.rounded-lg {
  border-radius: $border-radius-lg !important; // Redondeado
}

.rounded-xl {
  border-radius: $border-radius-xl !important; // Muy redondeado
}

.rounded-xxl {
  border-radius: $border-radius-xxl !important; // Extremadamente redondeado
}

.rounded-xxxl {
  border-radius: $border-radius-xxxl !important; // Nivel mÃ¡s redondeado
}

// Responsive button adjustments (apply only if no size variant is specified)
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .btn:not(.btn-xs):not(.btn-sm):not(.btn-md):not(.btn-lg):not(.btn-xl):not(.btn-xxl) {
      @if $breakpoint ==xs {
        padding: 0.2rem 0.4rem;
        font-size: $font-size-xs;
        line-height: $line-height-xs;
      }

      @else if $breakpoint ==sm {
        padding: 0.3rem 0.6rem;
        font-size: $font-size-sm;
        line-height: $line-height-sm;
      }

      @else if $breakpoint ==md {
        padding: 0.5rem 1rem;
        font-size: $font-size-md;
        line-height: $line-height-md;
      }

      @else if $breakpoint ==lg {
        padding: 0.75rem 1.5rem;
        font-size: $font-size-lg;
        line-height: $line-height-lg;
      }

      @else if $breakpoint ==xl {
        padding: 1rem 2rem;
        font-size: $font-size-xl;
        line-height: $line-height-xl;
      }

      @else if $breakpoint ==xxl {
        padding: 1.25rem 2.5rem;
        font-size: $font-size-xxl;
        line-height: $line-height-xxl;
      }
    }
  }
}

.text-xs {
  font-size: $font-size-xs;
  line-height: $line-height-xs;
}

.text-sm {
  font-size: $font-size-sm;
  line-height: $line-height-sm;
}

.text-md {
  font-size: $font-size-md;
  line-height: $line-height-md;
}

.text-lg {
  font-size: $font-size-lg;
  line-height: $line-height-lg;
}

.text-xl {
  font-size: $font-size-xl;
  line-height: $line-height-xl;
}

.text-xxl {
  font-size: $font-size-xxl;
  line-height: $line-height-xxl;
}

.text-xxxl {
  font-size: $font-size-xxxl;
  line-height: $line-height-xxxl;
}

.text-xxxxl {
  font-size: $font-size-xxxxl;
  line-height: $line-height-xxxxl;
}

// Clases para grosor de texto (Ã©nfasis/bold)
.font-weight-light {
  font-weight: $font-weight-light;
}

.font-weight-normal {
  font-weight: $font-weight-normal;
}

.font-weight-medium {
  font-weight: $font-weight-medium;
}

.font-weight-semibold {
  font-weight: $font-weight-semibold;
}

.font-weight-bold {
  font-weight: $font-weight-bold;
}

.font-weight-extrabold {
  font-weight: $font-weight-extrabold;
}

.font-weight-ultrabold {
  font-weight: $font-weight-ultrabold;
}

// Clases para altura de lÃ­nea (opcional, pero Ãºtil para consistencia)
.line-height-xs {
  line-height: $line-height-xs;
}

.line-height-sm {
  line-height: $line-height-sm;
}

.line-height-md {
  line-height: $line-height-md;
}

.line-height-lg {
  line-height: $line-height-lg;
}

.line-height-xl {
  line-height: $line-height-xl;
}

.line-height-xxl {
  line-height: $line-height-xxl;
}

.line-height-xxxl {
  line-height: $line-height-xxxl;
}

.line-height-xxxxl {
  line-height: $line-height-xxxxl;
}

.text-center {
  text-align: center !important;
}

.text-end {
  text-align: end !important;
}

.text-start {
  text-align: start !important;
}

@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .text-#{$breakpoint}-center {
      text-align: center !important;
    }

    .text-#{$breakpoint}-end {
      text-align: end !important;
    }

    .text-#{$breakpoint}-start {
      text-align: start !important;
    }
  }
}

.text-decoration-none {
  text-decoration: none !important;
}

.text-decoration-underline {
  text-decoration: underline;
}

.text-decoration-line-through {
  text-decoration: line-through;
}

.text-decoration-underline-skip-ink {
  text-decoration: underline-skip-ink;
}

.text-decoration-underline-skip-ink-overline {
  text-decoration: underline-skip-ink-overline;
}

.text-decoration-underline-skip-ink-overline-line-through {
  text-decoration: underline-skip-ink-overline-line-through;
}

.text-decoration-underline-skip-ink-overline-line-through-line-through {
  text-decoration: underline-skip-ink-overline-line-through-line-through;
}

.text-decoration-underline-skip-ink-overline-line-through-line-through-line-through {
  text-decoration: underline-skip;
}

.text-base {
  font-family: $font-family;
  font-size: $font-size-base;
  line-height: $line-height-base;
  font-weight: $font-weight-normal;
}

.chip {
  display: inline-block;
  background: linear-gradient(90deg, map-get($colors, success) 0%, map-get($colors, primary) 100%);
  color: #03050F;
  font-weight: $font-weight-bold;
  padding: 4px 12px;
  border-radius: $border-radius-sm;

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      font-size: if($breakpoint =='xs', $font-size-xs, if($breakpoint =='sm', $font-size-sm, if($breakpoint =='md', $font-size-sm, $font-size-sm))) !important;
      line-height: if($breakpoint =='xs', $line-height-xs, if($breakpoint =='sm', $line-height-sm, if($breakpoint =='md', $line-height-sm, $line-height-sm))) !important;
    }
  }
}

.chip-suggestion {
  display: inline-block;
  background-color: #7DF0BA;
  color: #03050F;
  font-weight: $font-weight-bold;
  padding: 4px 12px;
  border-radius: $border-radius-sm;

  @each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      font-size: if($breakpoint =='xs', $font-size-xs, if($breakpoint =='sm', $font-size-sm, if($breakpoint =='md', $font-size-sm, $font-size-sm))) !important;
      line-height: if($breakpoint =='xs', $line-height-xs, if($breakpoint =='sm', $line-height-sm, if($breakpoint =='md', $line-height-sm, $line-height-sm))) !important;
    }
  }
}

// DefiniciÃ³n de tamaÃ±os base y responsivos para cada elemento de texto
h1 {
  font-size: 2.5rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 1.5rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 2rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 2.5rem;
    /* TamaÃ±o base para escritorio */
  }
}

h2 {
  font-size: 2rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 1.25rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 1.75rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 2rem;
    /* TamaÃ±o base para escritorio */
  }
}

h3 {
  font-size: 1.75rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 1.125rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 1.5rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 1.75rem;
    /* TamaÃ±o base para escritorio */
  }
}

h4 {
  font-size: 1.5rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 1rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 1.25rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 1.5rem;
    /* TamaÃ±o base para escritorio */
  }
}

h5 {
  font-size: 1.25rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 0.875rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 1rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 1.25rem;
    /* TamaÃ±o base para escritorio */
  }
}

h6 {
  font-size: 1rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 600;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 0.75rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 0.875rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 1rem;
    /* TamaÃ±o base para escritorio */
  }
}

p,
span,
a,
label,
strong,
em,
small {
  font-size: 1rem;
  /* TamaÃ±o base para pantallas grandes */
  font-weight: 400;

  @media (max-width: 576px) {
    /* TelÃ©fonos */
    font-size: 0.875rem;
    /* TamaÃ±o mÃ¡s pequeÃ±o para telÃ©fonos */
  }

  @media (min-width: 577px) and (max-width: 768px) {
    /* Tabletas */
    font-size: 1rem;
    /* TamaÃ±o intermedio para tabletas */
  }

  @media (min-width: 769px) {
    /* Escritorio */
    font-size: 1rem;
    /* TamaÃ±o base para escritorio */
  }
}

// Clases para tamaÃ±os de texto (responsive con lÃ­mite mÃ¡ximo)
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    .text-xs {
      font-size: if($breakpoint =='xs', $font-size-xs - 2px, if($breakpoint =='sm', $font-size-xs, $font-size-xs)) !important;
      line-height: if($breakpoint =='xs', $line-height-xs, if($breakpoint =='sm', $line-height-xs, $line-height-xs)) !important;
    }

    .text-sm {
      font-size: if($breakpoint =='xs', $font-size-xs, if($breakpoint =='sm', $font-size-sm, if($breakpoint =='md', $font-size-sm, $font-size-sm))) !important;
      line-height: if($breakpoint =='xs', $line-height-xs, if($breakpoint =='sm', $line-height-sm, if($breakpoint =='md', $line-height-sm, $line-height-sm))) !important;
    }

    .text-md {
      font-size: if($breakpoint =='xs', $font-size-xs + 2px, if($breakpoint =='sm', $font-size-md, if($breakpoint =='md', $font-size-md, if($breakpoint =='lg', $font-size-md, $font-size-md)))) !important;
      line-height: if($breakpoint =='xs', $line-height-xs, if($breakpoint =='sm', $line-height-md, if($breakpoint =='md', $line-height-md, if($breakpoint =='lg', $line-height-md, $line-height-md)))) !important;
    }

    .text-lg {
      font-size: if($breakpoint =='xs', $font-size-sm, if($breakpoint =='sm', $font-size-lg, if($breakpoint =='md', $font-size-lg, if($breakpoint =='lg', $font-size-lg, $font-size-lg)))) !important;
      line-height: if($breakpoint =='xs', $line-height-sm, if($breakpoint =='sm', $line-height-lg, if($breakpoint =='md', $line-height-lg, if($breakpoint =='lg', $line-height-lg, $line-height-lg)))) !important;
    }

    .text-xl {
      font-size: if($breakpoint =='xs', $font-size-md, if($breakpoint =='sm', $font-size-xl, if($breakpoint =='md', $font-size-xl, if($breakpoint =='lg', $font-size-xl, $font-size-xl)))) !important;
      line-height: if($breakpoint =='xs', $line-height-md, if($breakpoint =='sm', $line-height-xl, if($breakpoint =='md', $line-height-xl, if($breakpoint =='lg', $line-height-xl, $line-height-xl)))) !important;
    }

    .text-xxl {
      font-size: if($breakpoint =='xs', $font-size-lg, if($breakpoint =='sm', $font-size-xxl, if($breakpoint =='md', $font-size-xxl, if($breakpoint =='lg', $font-size-xxl, $font-size-xxl)))) !important;
      line-height: if($breakpoint =='xs', $line-height-lg, if($breakpoint =='sm', $line-height-xxl, if($breakpoint =='md', $line-height-xxl, if($breakpoint =='lg', $line-height-xxl, $line-height-xxl)))) !important;
    }
  }
}


@each $level, $shadow-value in $shadows {
  .shadow-#{$level} {
    box-shadow: $shadow-value !important;
  }
}

// Clases para cambiar el color de la sombra
@each $color-name, $color-value in $colors {
  .shadow-color-#{$color-name} {
    box-shadow: 0 1px 2px rgba($color-value, 0.1),
      0 2px 4px rgba($color-value, 0.15),
      0 4px 8px rgba($color-value, 0.2),
      0 6px 12px rgba($color-value, 0.25),
      0 8px 16px rgba($color-value, 0.3) !important;
  }
}

.hvr-push {
  transition: transform 0.5s ease, box-shadow 0.5s ease-in;

  &:hover {
    transform: translateY(4px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22) !important;
  }
}

.anim-in {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}


.border-solid {
  border-style: solid !important;
}

.border-dashed {
  border-style: dashed !important;
}

.border-dotted {
  border-style: dotted !important;
}

.border-none {
  border-style: none !important;
}

@each $spacer, $value in $spacers {
  .border-#{$spacer} {
    border-width: $value !important;
  }

  .border-t-#{$spacer} {
    border-top-width: $value !important;
  }

  .border-r-#{$spacer} {
    border-right-width: $value !important;
  }

  .border-b-#{$spacer} {
    border-bottom-width: $value !important;
  }

  .border-l-#{$spacer} {
    border-left-width: $value !important;
  }
}

// Color del borde
@each $color-name, $color-value in $colors {
  .border-#{$color-name} {
    border-color: $color-value !important;
  }

  .border-t-#{$color-name} {
    border-top-color: $color-value !important;
  }

  .border-r-#{$color-name} {
    border-right-color: $color-value !important;
  }

  .border-b-#{$color-name} {
    border-bottom-color: $color-value !important;
  }

  .border-l-#{$color-name} {
    border-left-color: $color-value !important;
  }
}

// Clases responsivas para bordes
@each $breakpoint in map-keys($breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    // Tipos de borde responsivos
    .border-#{$breakpoint}-solid {
      border-style: solid !important;
    }

    .border-#{$breakpoint}-dashed {
      border-style: dashed !important;
    }

    .border-#{$breakpoint}-dotted {
      border-style: dotted !important;
    }

    .border-#{$breakpoint}-none {
      border-style: none !important;
    }

    // Grosor del borde responsivo
    @each $spacer, $value in $spacers {
      .border-#{$breakpoint}-#{$spacer} {
        border-width: $value !important;
      }

      .border-t-#{$breakpoint}-#{$spacer} {
        border-top-width: $value !important;
      }

      .border-r-#{$breakpoint}-#{$spacer} {
        border-right-width: $value !important;
      }

      .border-b-#{$breakpoint}-#{$spacer} {
        border-bottom-width: $value !important;
      }

      .border-l-#{$breakpoint}-#{$spacer} {
        border-left-width: $value !important;
      }
    }

    // Color del borde responsivo
    @each $color-name, $color-value in $colors {
      .border-#{$breakpoint}-#{$color-name} {
        border-color: $color-value !important;
      }

      .border-t-#{$breakpoint}-#{$color-name} {
        border-top-color: $color-value !important;
      }

      .border-r-#{$breakpoint}-#{$color-name} {
        border-right-color: $color-value !important;
      }

      .border-b-#{$breakpoint}-#{$color-name} {
        border-bottom-color: $color-value !important;
      }

      .border-l-#{$breakpoint}-#{$color-name} {
        border-left-color: $color-value !important;
      }
    }
  }
}

.bg-gradient{
     background: linear-gradient(to right, #6B46C1 -30%, #FFFFFF 20%, #FFFFFF 80%, #6B46C1 130%);
}